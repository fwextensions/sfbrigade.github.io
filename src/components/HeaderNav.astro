---
import NavLink from "./NavLink.astro";
import NavDropdown from "./NavDropdown.astro";
import {
	meetupURL,
	getStartedURL,
	aboutURL,
	blogURL,
	codeOfConductURL,
	donateURL,
	projectsURL,
} from "@/utils/urls";
import HeaderLogo from "./HeaderLogo.astro";

const routes = [
	{ label: "Get Started", page: getStartedURL },
	{ label: "Events", page: meetupURL },
	{ label: "Projects", page: projectsURL },
	{ label: "Blog", page: blogURL },
	{ label: "Donate", page: donateURL },
	{ label: "About", page: aboutURL,
		pages: [
			{ label: "Code of Conduct", page: codeOfConductURL }
		]
	}
];
---

<header class="container">
	<nav aria-label="Header">
		<ul>
			<li class="home">
				<NavLink href="/" class="contrast">
					<HeaderLogo />
				</NavLink>
			</li>
		</ul>
		<input type="checkbox" id="toggle-button" aria-controls="nav-links" />
		<label for="toggle-button" class="toggle-icon">
			<span></span>
		</label>
		<ul id="nav-links">
			{routes.map(({ label, page, pages }) => (
				<li>
					<NavLink href={page}>
						{label}
					</NavLink>
					{!!pages?.length &&
						<NavDropdown items={pages} />
					}
				</li>
			))}
		</ul>
	</nav>
</header>

<style>
	header {
		padding: 0;
	}

	#nav-links li {
		white-space: nowrap;
	}

	#toggle-button, .toggle-icon {
		display: none;
		user-select: none;
	}

	@media only screen and (max-width: 768px) {
		header {
			max-width: initial;
			display: flex;
		}

		nav {
			width: 100%;
			align-items: center;
			position: relative;
		}

		.home {
			margin: 0 var(--pico-spacing);
		}

		#nav-links {
			padding-bottom: var(--pico-spacing);
			padding-left: 56px;
			display: none;
			box-shadow: 0 10px 15px -5px rgba(0, 0, 0, 0.25);
		}

		#nav-links li {
			padding-left: 0;
		}

		#toggle-button:checked ~ #nav-links {
			background-color: var(--pico-background-color);
			top: 100%;
			width: 100%;
			display: flex;
			align-items: start;
			flex-direction: column;
			position: absolute;
			z-index: 100;
		}

		.toggle-icon {
			padding: .5rem;
			margin: 0 calc(var(--pico-spacing) - .5rem);
			cursor: pointer;
			position: relative;
			display: inline-block;
			--bar-color: #333;

			span {
				background: var(--bar-color);
				display: block;
				height: .1rem;
				position: relative;
				transition: background .1s ease-out;
				width: 1rem;
			}

			/* annoyingly, the PostCSS nesting plugin can't seem to handle pseudoelements
				 like &::before, even though it's valid CSS.  so we have to write out span. */
			span::before,
			span::after {
				content: "";
				background: var(--bar-color);
				transition: inherit;
				width: 100%;
				height: 100%;
				position: absolute;
			}
			span::before {
				top: 6px;
			}

			span::after {
				top: -6px;
			}
		}

		#toggle-button:checked ~ .toggle-icon {
			span {
				background: transparent;
			}

			span::before {
				transform: rotate(45deg);
				top: 0;
			}

			span::after {
				transform: rotate(-45deg);
				top: 0;
			}
		}
	}
</style>
